# development mode
version: '3.4'
services:
  front_candidat:
    image: candilib_front:${APP_VERSION:-latest}
    container_name: candilib_front_candidat
    build:
      target: development
      context: ./
      dockerfile: Dockerfile
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${http_proxy}
        no_proxy: ${no_proxy}
        npm_registry: ${NPM_REGISTRY}
        sass_registry: ${SASS_REGISTRY}
        CYPRESS_DOWNLOAD_MIRROR: ${CYPRESS_DOWNLOAD_MIRROR}
    volumes:
      - ./tests:/app/tests
      - ./src:/app/src
      - ./public:/app/public
      - .:/app:delegated
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # this will overwrite the default node_modules dir in container so it won't conflict with our
      # /opt/node_modules location. Thanks to PR from @brnluiz
      - notused:/app/node_modules
#    env_file:
#      - ${cnf:-.env}
    environment:
      API_HOST: ${API_HOST:-api}
      API_PORT: ${API_PORT:-8000}
    ports:
      - "${WEB_PORT:-80}:80"

    networks:
      - candilib-network
networks:
  candilib-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
volumes:
  notused:
